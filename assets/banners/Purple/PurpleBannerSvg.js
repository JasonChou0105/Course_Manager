import React, { useEffect, useRef } from "react";
import { Animated, Easing } from "react-native";
import Svg, { Defs, LinearGradient, Path, Stop } from "react-native-svg";

const AnimatedPath = Animated.createAnimatedComponent(Path);

const PurpleBannerSvg = () => {
  const moveAnim1 = useRef(new Animated.ValueXY({ x: 0, y: 0 })).current;
  const moveAnim2 = useRef(new Animated.ValueXY({ x: 0, y: 0 })).current;

  useEffect(() => {
    // Looping animation
    Animated.loop(
      Animated.sequence([
        // Move right
        Animated.timing(moveAnim1, {
          toValue: { x: 200, y: 75 },
          duration: 4000,
          useNativeDriver: true,
          easing: Easing.inOut(Easing.quad),
        }),
        Animated.timing(moveAnim1, {
          toValue: { x: 0, y: 0 },
          duration: 4000,
          useNativeDriver: true,
          easing: Easing.inOut(Easing.quad),
        }),
      ])
    ).start();

    Animated.loop(
      Animated.sequence([
        // Move right
        Animated.timing(moveAnim2, {
          toValue: { x: 75, y: 20 },
          duration: 4000,
          useNativeDriver: true,
          easing: Easing.inOut(Easing.quad),
        }),
        Animated.timing(moveAnim2, {
          toValue: { x: 0, y: 0 },
          duration: 4000,
          useNativeDriver: true,
          easing: Easing.inOut(Easing.quad),
        }),
      ])
    ).start();
  }, []);

  return (
    <Svg
      xmlns="http://www.w3.org/2000/svg"
      style={{
        transition: ".3s",
      }}
      viewBox="150 -50 1800 250"
    >
      <Defs>
        <LinearGradient id="a" x1={0} x2={0} y1={1} y2={0}>
          <Stop offset="0%" stopColor="#c072ffff" />
          <Stop offset="100%" stopColor="#674be4ff" />
        </LinearGradient>
      </Defs>
      <AnimatedPath
        fill="url(#a)"
        d="M0,180L34.3,170C68.6,160,137,140,206,115C274.3,90,343,60,411,85C480,110,549,190,617,225C685.7,260,754,250,823,210C891.4,170,960,100,1029,75C1097.1,50,1166,70,1234,95C1302.9,120,1371,150,1440,145C1508.6,140,1577,100,1646,75C1714.3,50,1783,40,1851,55C1920,70,1989,110,2057,115C2125.7,120,2194,90,2263,90C2331.4,90,2400,120,2469,135C2537.1,150,2606,150,2674,165C2742.9,180,2811,210,2880,205C2948.6,200,3017,160,3086,145C3154.3,130,3223,140,3291,160C3360,180,3429,210,3497,185C3565.7,160,3634,80,3703,40C3771.4,0,3840,0,3909,20C3977.1,40,4046,80,4114,110C4182.9,140,4251,160,4320,175C4388.6,190,4457,200,4526,210C4594.3,220,4663,230,4731,210C4800,190,4869,140,4903,115L4937.1,90L4937.1,300L4902.9,300C4868.6,300,4800,300,4731,300C4662.9,300,4594,300,4526,300C4457.1,300,4389,300,4320,300C4251.4,300,4183,300,4114,300C4045.7,300,3977,300,3909,300C3840,300,3771,300,3703,300C3634.3,300,3566,300,3497,300C3428.6,300,3360,300,3291,300C3222.9,300,3154,300,3086,300C3017.1,300,2949,300,2880,300C2811.4,300,2743,300,2674,300C2605.7,300,2537,300,2469,300C2400,300,2331,300,2263,300C2194.3,300,2126,300,2057,300C1988.6,300,1920,300,1851,300C1782.9,300,1714,300,1646,300C1577.1,300,1509,300,1440,300C1371.4,300,1303,300,1234,300C1165.7,300,1097,300,1029,300C960,300,891,300,823,300C754.3,300,686,300,617,300C548.6,300,480,300,411,300C342.9,300,274,300,206,300C137.1,300,69,300,34,300L0,300Z"
        style={{
          transform: [{ translateX: moveAnim1.x }, { translateY: moveAnim1.y }],
          opacity: 0.6,
        }}
        transform={{
          translate: "0, -30",
        }}
      />
      <Defs>
        <LinearGradient id="b" x1={0} x2={0} y1={1} y2={0}>
          <Stop offset="0%" stopColor="#9540f7ff" />
          <Stop offset="100%" stopColor="#532decff" />
        </LinearGradient>
      </Defs>
      <AnimatedPath
        fill="url(#b)"
        d="M0,30L34.3,35C68.6,40,137,50,206,70C274.3,90,343,120,411,110C480,100,549,50,617,35C685.7,20,754,40,823,80C891.4,120,960,180,1029,205C1097.1,230,1166,220,1234,215C1302.9,210,1371,210,1440,175C1508.6,140,1577,70,1646,45C1714.3,20,1783,40,1851,60C1920,80,1989,100,2057,130C2125.7,160,2194,200,2263,215C2331.4,230,2400,220,2469,210C2537.1,200,2606,190,2674,165C2742.9,140,2811,100,2880,100C2948.6,100,3017,140,3086,130C3154.3,120,3223,60,3291,60C3360,60,3429,120,3497,160C3565.7,200,3634,220,3703,230C3771.4,240,3840,240,3909,215C3977.1,190,4046,140,4114,140C4182.9,140,4251,190,4320,215C4388.6,240,4457,240,4526,205C4594.3,170,4663,100,4731,100C4800,100,4869,170,4903,205L4937.1,240L4937.1,300L4902.9,300C4868.6,300,4800,300,4731,300C4662.9,300,4594,300,4526,300C4457.1,300,4389,300,4320,300C4251.4,300,4183,300,4114,300C4045.7,300,3977,300,3909,300C3840,300,3771,300,3703,300C3634.3,300,3566,300,3497,300C3428.6,300,3360,300,3291,300C3222.9,300,3154,300,3086,300C3017.1,300,2949,300,2880,300C2811.4,300,2743,300,2674,300C2605.7,300,2537,300,2469,300C2400,300,2331,300,2263,300C2194.3,300,2126,300,2057,300C1988.6,300,1920,300,1851,300C1782.9,300,1714,300,1646,300C1577.1,300,1509,300,1440,300C1371.4,300,1303,300,1234,300C1165.7,300,1097,300,1029,300C960,300,891,300,823,300C754.3,300,686,300,617,300C548.6,300,480,300,411,300C342.9,300,274,300,206,300C137.1,300,69,300,34,300L0,300Z"
        style={{
          transform: [{ translateX: moveAnim2.x }, { translateY: moveAnim2.y }],
          opacity: 0.8,
        }}
      />
    </Svg>
  );
};

export default PurpleBannerSvg;

//OrangeBannerSvg
