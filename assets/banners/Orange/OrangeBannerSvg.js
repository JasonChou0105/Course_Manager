import React, { useEffect, useRef } from "react";
import { Animated, Easing } from "react-native";
import Svg, { Defs, LinearGradient, Path, Stop } from "react-native-svg";

const AnimatedPath = Animated.createAnimatedComponent(Path);

const OrangeBannerSvg = () => {
  const moveAnim1 = useRef(new Animated.ValueXY({ x: 0, y: 0 })).current;
  const moveAnim2 = useRef(new Animated.ValueXY({ x: 0, y: 0 })).current;

  useEffect(() => {
    // Looping animation
    Animated.loop(
      Animated.sequence([
        // Move right
        Animated.timing(moveAnim1, {
          toValue: { x: 200, y: 75 },
          duration: 4200,
          useNativeDriver: true,
          easing: Easing.inOut(Easing.quad),
        }),
        Animated.timing(moveAnim1, {
          toValue: { x: 0, y: 0 },
          duration: 4200,
          useNativeDriver: true,
          easing: Easing.inOut(Easing.quad),
        }),
      ])
    ).start();

    Animated.loop(
      Animated.sequence([
        // Move right
        Animated.timing(moveAnim2, {
          toValue: { x: 75, y: 20 },
          duration: 4200,
          useNativeDriver: true,
          easing: Easing.inOut(Easing.quad),
        }),
        Animated.timing(moveAnim2, {
          toValue: { x: 0, y: 0 },
          duration: 4200,
          useNativeDriver: true,
          easing: Easing.inOut(Easing.quad),
        }),
      ])
    ).start();
  }, []);

  return (
    <Svg
      xmlns="http://www.w3.org/2000/svg"
      style={{
        transition: ".3s",
      }}
      viewBox="150 -60 1800 250"
    >
      <Defs>
        <LinearGradient id="a" x1={0} x2={0} y1={1} y2={0}>
          <Stop offset="0%" stopColor="#ee7b58ff" />
          <Stop offset="100%" stopColor="#eebb4eff" />
        </LinearGradient>
      </Defs>
      <AnimatedPath
        fill="url(#a)"
        d="M0,232L34.3,212.7C68.6,193,137,155,206,120.8C274.3,87,343,58,411,67.7C480,77,549,126,617,159.5C685.7,193,754,213,823,188.5C891.4,164,960,97,1029,72.5C1097.1,48,1166,68,1234,82.2C1302.9,97,1371,106,1440,111.2C1508.6,116,1577,116,1646,140.2C1714.3,164,1783,213,1851,212.7C1920,213,1989,164,2057,120.8C2125.7,77,2194,39,2263,43.5C2331.4,48,2400,97,2469,111.2C2537.1,126,2606,106,2674,91.8C2742.9,77,2811,68,2880,67.7C2948.6,68,3017,77,3086,87C3154.3,97,3223,106,3291,135.3C3360,164,3429,213,3497,207.8C3565.7,203,3634,145,3703,120.8C3771.4,97,3840,106,3909,116C3977.1,126,4046,135,4114,140.2C4182.9,145,4251,145,4320,149.8C4388.6,155,4457,164,4526,154.7C4594.3,145,4663,116,4731,91.8C4800,68,4869,48,4903,38.7L4937.1,29L4937.1,290L4902.9,290C4868.6,290,4800,290,4731,290C4662.9,290,4594,290,4526,290C4457.1,290,4389,290,4320,290C4251.4,290,4183,290,4114,290C4045.7,290,3977,290,3909,290C3840,290,3771,290,3703,290C3634.3,290,3566,290,3497,290C3428.6,290,3360,290,3291,290C3222.9,290,3154,290,3086,290C3017.1,290,2949,290,2880,290C2811.4,290,2743,290,2674,290C2605.7,290,2537,290,2469,290C2400,290,2331,290,2263,290C2194.3,290,2126,290,2057,290C1988.6,290,1920,290,1851,290C1782.9,290,1714,290,1646,290C1577.1,290,1509,290,1440,290C1371.4,290,1303,290,1234,290C1165.7,290,1097,290,1029,290C960,290,891,290,823,290C754.3,290,686,290,617,290C548.6,290,480,290,411,290C342.9,290,274,290,206,290C137.1,290,69,290,34,290L0,290Z"
        style={{
          transform: [{ translateX: moveAnim1.x }, { translateY: moveAnim1.y }],
          opacity: 0.6,
        }}
        transform={{
          translate: "0, -30",
        }}
      />
      <Defs>
        <LinearGradient id="b" x1={0} x2={0} y1={1} y2={0}>
          <Stop offset="0%" stopColor="#f54e17ff" />
          <Stop offset="100%" stopColor="#ffb30bff" />
        </LinearGradient>
      </Defs>
      <AnimatedPath
        fill="url(#b)"
        d="M0,29L34.3,48.3C68.6,68,137,106,206,111.2C274.3,116,343,87,411,62.8C480,39,549,19,617,9.7C685.7,0,754,0,823,4.8C891.4,10,960,19,1029,58C1097.1,97,1166,164,1234,203C1302.9,242,1371,251,1440,212.7C1508.6,174,1577,87,1646,82.2C1714.3,77,1783,155,1851,174C1920,193,1989,155,2057,145C2125.7,135,2194,155,2263,169.2C2331.4,184,2400,193,2469,193.3C2537.1,193,2606,184,2674,178.8C2742.9,174,2811,174,2880,188.5C2948.6,203,3017,232,3086,232C3154.3,232,3223,203,3291,178.8C3360,155,3429,135,3497,149.8C3565.7,164,3634,213,3703,222.3C3771.4,232,3840,203,3909,164.3C3977.1,126,4046,77,4114,62.8C4182.9,48,4251,68,4320,62.8C4388.6,58,4457,29,4526,38.7C4594.3,48,4663,97,4731,116C4800,135,4869,126,4903,120.8L4937.1,116L4937.1,290L4902.9,290C4868.6,290,4800,290,4731,290C4662.9,290,4594,290,4526,290C4457.1,290,4389,290,4320,290C4251.4,290,4183,290,4114,290C4045.7,290,3977,290,3909,290C3840,290,3771,290,3703,290C3634.3,290,3566,290,3497,290C3428.6,290,3360,290,3291,290C3222.9,290,3154,290,3086,290C3017.1,290,2949,290,2880,290C2811.4,290,2743,290,2674,290C2605.7,290,2537,290,2469,290C2400,290,2331,290,2263,290C2194.3,290,2126,290,2057,290C1988.6,290,1920,290,1851,290C1782.9,290,1714,290,1646,290C1577.1,290,1509,290,1440,290C1371.4,290,1303,290,1234,290C1165.7,290,1097,290,1029,290C960,290,891,290,823,290C754.3,290,686,290,617,290C548.6,290,480,290,411,290C342.9,290,274,290,206,290C137.1,290,69,290,34,290L0,290Z"
        style={{
          transform: [{ translateX: moveAnim2.x }, { translateY: moveAnim2.y }],
          opacity: 0.8,
        }}
        transform={{
          translate: "0, 20",
        }}
      />
    </Svg>
  );
};

export default OrangeBannerSvg;

//OrangeBannerSvg
