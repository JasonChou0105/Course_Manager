import React, { useEffect, useRef } from "react";
import { Animated, Easing } from "react-native";
import Svg, { Defs, LinearGradient, Path, Stop } from "react-native-svg";

const AnimatedPath = Animated.createAnimatedComponent(Path);

const GreenBannerSvg = () => {
  const moveAnim1 = useRef(new Animated.ValueXY({ x: 0, y: 0 })).current;
  const moveAnim2 = useRef(new Animated.ValueXY({ x: 0, y: 0 })).current;

  useEffect(() => {
    // Looping animation
    Animated.loop(
      Animated.sequence([
        // Move right
        Animated.timing(moveAnim1, {
          toValue: { x: 200, y: 75 },
          duration: 3800,
          useNativeDriver: true,
          easing: Easing.inOut(Easing.quad),
        }),
        Animated.timing(moveAnim1, {
          toValue: { x: 0, y: 0 },
          duration: 3800,
          useNativeDriver: true,
          easing: Easing.inOut(Easing.quad),
        }),
      ])
    ).start();

    Animated.loop(
      Animated.sequence([
        // Move right
        Animated.timing(moveAnim2, {
          toValue: { x: 75, y: 60 },
          duration: 3800,
          useNativeDriver: true,
          easing: Easing.inOut(Easing.quad),
        }),
        Animated.timing(moveAnim2, {
          toValue: { x: 0, y: 0 },
          duration: 3800,
          useNativeDriver: true,
          easing: Easing.inOut(Easing.quad),
        }),
      ])
    ).start();
  }, []);

  return (
    <Svg
      xmlns="http://www.w3.org/2000/svg"
      style={{
        transition: ".3s",
      }}
      viewBox="150 -60 1800 225"
    >
      <Defs>
        <LinearGradient id="a" x1={0} x2={0} y1={1} y2={0}>
          <Stop offset="0%" stopColor="#3E9D00" />
          <Stop offset="100%" stopColor="#12CD00" />
        </LinearGradient>
      </Defs>
      <AnimatedPath
        fill="url(#a)"
        d="M0,0L24,40C48,80,96,160,144,165C192,170,240,100,288,75C336,50,384,70,432,95C480,120,528,150,576,165C624,180,672,180,720,185C768,190,816,200,864,185C912,170,960,130,1008,110C1056,90,1104,90,1152,110C1200,130,1248,170,1296,170C1344,170,1392,130,1440,95C1488,60,1536,30,1584,25C1632,20,1680,40,1728,65C1776,90,1824,120,1872,130C1920,140,1968,130,2016,135C2064,140,2112,160,2160,175C2208,190,2256,200,2304,170C2352,140,2400,70,2448,60C2496,50,2544,100,2592,140C2640,180,2688,210,2736,230C2784,250,2832,260,2880,225C2928,190,2976,110,3024,85C3072,60,3120,90,3168,85C3216,80,3264,40,3312,55C3360,70,3408,140,3432,175L3456,210L3456,300L3432,300C3408,300,3360,300,3312,300C3264,300,3216,300,3168,300C3120,300,3072,300,3024,300C2976,300,2928,300,2880,300C2832,300,2784,300,2736,300C2688,300,2640,300,2592,300C2544,300,2496,300,2448,300C2400,300,2352,300,2304,300C2256,300,2208,300,2160,300C2112,300,2064,300,2016,300C1968,300,1920,300,1872,300C1824,300,1776,300,1728,300C1680,300,1632,300,1584,300C1536,300,1488,300,1440,300C1392,300,1344,300,1296,300C1248,300,1200,300,1152,300C1104,300,1056,300,1008,300C960,300,912,300,864,300C816,300,768,300,720,300C672,300,624,300,576,300C528,300,480,300,432,300C384,300,336,300,288,300C240,300,192,300,144,300C96,300,48,300,24,300L0,300Z"
        style={{
          transform: [{ translateX: moveAnim1.x }, { translateY: moveAnim1.y }],
          opacity: 0.6,
        }}
        transform={{
          translate: "-50, -50",
        }}
      />
      <Defs>
        <LinearGradient id="b" x1={0} x2={0} y1={1} y2={0}>
          <Stop offset="0%" stopColor="#4bd913ff" />
          <Stop offset="100%" stopColor="#17f570ff" />
        </LinearGradient>
      </Defs>
      <AnimatedPath
        fill="url(#b)"
        d="M0,333L26.7,302.2C53.3,271,107,210,160,203.5C213.3,197,267,247,320,277.5C373.3,308,427,321,480,283.7C533.3,247,587,160,640,129.5C693.3,99,747,123,800,141.8C853.3,160,907,173,960,154.2C1013.3,136,1067,86,1120,55.5C1173.3,25,1227,12,1280,37C1333.3,62,1387,123,1440,160.3C1493.3,197,1547,210,1600,203.5C1653.3,197,1707,173,1760,160.3C1813.3,148,1867,148,1920,172.7C1973.3,197,2027,247,2080,271.3C2133.3,296,2187,296,2240,277.5C2293.3,259,2347,222,2400,209.7C2453.3,197,2507,210,2560,222C2613.3,234,2667,247,2720,246.7C2773.3,247,2827,234,2880,246.7C2933.3,259,2987,296,3040,277.5C3093.3,259,3147,185,3200,129.5C3253.3,74,3307,37,3360,24.7C3413.3,12,3467,25,3520,55.5C3573.3,86,3627,136,3680,160.3C3733.3,185,3787,185,3813,185L3840,185L3840,370L3813.3,370C3786.7,370,3733,370,3680,370C3626.7,370,3573,370,3520,370C3466.7,370,3413,370,3360,370C3306.7,370,3253,370,3200,370C3146.7,370,3093,370,3040,370C2986.7,370,2933,370,2880,370C2826.7,370,2773,370,2720,370C2666.7,370,2613,370,2560,370C2506.7,370,2453,370,2400,370C2346.7,370,2293,370,2240,370C2186.7,370,2133,370,2080,370C2026.7,370,1973,370,1920,370C1866.7,370,1813,370,1760,370C1706.7,370,1653,370,1600,370C1546.7,370,1493,370,1440,370C1386.7,370,1333,370,1280,370C1226.7,370,1173,370,1120,370C1066.7,370,1013,370,960,370C906.7,370,853,370,800,370C746.7,370,693,370,640,370C586.7,370,533,370,480,370C426.7,370,373,370,320,370C266.7,370,213,370,160,370C106.7,370,53,370,27,370L0,370Z"
        style={{
          transform: [{ translateX: moveAnim2.x }, { translateY: moveAnim2.y }],
          opacity: 0.8,
        }}
      />
    </Svg>
  );
};

export default GreenBannerSvg;
